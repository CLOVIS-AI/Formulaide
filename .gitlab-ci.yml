stages:
  - docker      # Docker images necessary for the next stages
  - build       # Binary generation
  - docker-bin  # Docker images that contain binaries
  - test        # Tests, documentation
  - deploy      # Final container generation

variables:
  jdk_image: "openjdk:11"
  js_chrome: "$CI_REGISTRY_IMAGE/js-chrome"
  server_bin: "$CI_REGISTRY_IMAGE/server"

include:
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/docker.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/gradle.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/version.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'schedule'
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

dokka:
  image: $jdk_image
  stage: build
  extends: [ .gradle ]
  needs: [ ]
  script:
    - "./gradlew dokkaHtmlMultiModule"
  artifacts:
    paths:
      - build/dokka/htmlMultiModule/
    expose_as: 'Documentation'
  interruptible: true

pages:
  image: alpine:latest
  stage: deploy
  dependencies: [ dokka ]
  needs: [ dokka ]
  script:
    - mkdir -p public/documentation
    - mv build/dokka/htmlMultiModule/* public/documentation/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_TAG
  interruptible: false

telegram:
  stage: deploy
  image: registry.gitlab.com/clovis-ai/dotfiles:latest
  needs: [ ]
  script:
    - git changelog --format telegram-html --incoming >changelog
    - announce-telegram changelog "$CHAT_IDS"
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  interruptible: false
