stages:
  - docker      # Docker images necessary for the next stages
  - build       # Binary generation
  - docker-bin  # Docker images that contain binaries
  - test        # Tests, documentation
  - deploy      # Final container generation

variables:
  jdk_image: "openjdk:17"
  server_bin: "$CI_REGISTRY_IMAGE/server"

include:
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/docker.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/gradle.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/version.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'schedule'
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

# Build the necessary images

chromium:build:
  extends: [ .os.docker.build ]
  needs: [ ]
  stage: docker

  variables:
    dockerfile: .gitlab/chromium.dockerfile
    context: .gitlab
    image: chromium

  interruptible: true

chromium:publish:
  extends: [ .os.docker.rename ]
  stage: deploy

  variables:
    image: chromium

  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

  interruptible: true

# Documentation

dokka:
  image: $jdk_image
  stage: build
  extends: [ .os.gradle ]
  needs: [ ]
  script:
    - "./gradlew dokkaHtmlMultiModule"
    - mkdir -p docs
    - mv build/dokka/htmlMultiModule/* docs
  artifacts:
    paths:
      - docs
    expose_as: 'Documentation'
  environment:
    name: review/documentation-$CI_COMMIT_REF_SLUG
    url: https://$CI_PROJECT_NAMESPACE.$CI_PAGES_DOMAIN/-/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/docs/index.html
    deployment_tier: development
  interruptible: true

# Tests

test-jvm:
  image: $jdk_image
  stage: test
  extends: [ .os.gradle ]
  needs: [ ]

  script:
    - "./gradlew jvmTest remote-server:test koverMergedVerify koverMergedReport"
    - mkdir -p kover
    - mv build/reports/kover/merged/html/* kover

    - values=$(<build/reports/kover/merged/xml/report.xml tail -7 | head -5 | grep 'INSTRUCTION' | cut -d ' ' -f 3,4 | sed 's/missed="//;s/" covered="/ /;s/"\/>//')
    - missed=$(<<<$values cut -d ' ' -f 1)
    - covered=$(<<<$values cut -d ' ' -f 2)
    - echo "Coverage $(($covered * 100 / ($covered + $missed)))%"
  coverage: '/Coverage \d+%/'

  artifacts:
    paths:
      - kover
    expose_as: 'Coverage JVM'

  environment:
    name: review/coverage-$CI_COMMIT_REF_SLUG
    url: https://$CI_PROJECT_NAMESPACE.$CI_PAGES_DOMAIN/-/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/kover/index.html
    deployment_tier: development

  interruptible: true

test-js:
  image: $CI_REGISTRY_IMAGE/chromium:build-$CI_PIPELINE_IID
  stage: test
  extends: [ .os.gradle ]
  needs: [ chromium:build ]

  script:
    - "./gradlew jsBrowserTest"

  interruptible: true

pages:
  image: alpine:latest
  stage: deploy
  dependencies: [ dokka ]
  needs: [ dokka ]
  script:
    - mkdir -p public/documentation
    - mv docs/* public/documentation/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_TAG
  interruptible: false

telegram:
  stage: deploy
  image: registry.gitlab.com/clovis-ai/dotfiles:latest
  needs: [ ]
  script:
    - git changelog --format telegram-html --incoming >changelog
    - announce-telegram changelog "$CHAT_IDS"
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  interruptible: false
